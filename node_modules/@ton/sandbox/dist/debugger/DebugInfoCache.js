"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerCompiledContract = exports.defaultDebugInfoCache = void 0;
const node_path_1 = require("node:path");
const marks_1 = require("./marks");
exports.defaultDebugInfoCache = new Map();
function registerCompiledContract(code, debugInfo, marks) {
    const parsedMarks = (0, marks_1.parseMarks)(marks, code);
    const { locations, globals } = debugInfo;
    const sm = {};
    for (let i = 0; i < locations.length; i++) {
        const di = locations[i];
        const common = {
            path: (0, node_path_1.resolve)(di.file),
            line: di.line,
            function: di.func,
            contextId: di.ctx_id,
            requireContextId: di.req_ctx_id,
        };
        if (di.ret) {
            sm[i] = {
                ...common,
                type: 'return',
            };
        }
        else if (di.try_catch_ctx_id !== undefined) {
            sm[i] = {
                ...common,
                type: 'try_begin',
                catchContextId: di.try_catch_ctx_id,
            };
        }
        else if (di.is_try_end) {
            sm[i] = {
                ...common,
                type: 'try_end',
            };
        }
        else if (di.vars !== undefined) {
            sm[i] = {
                ...common,
                type: 'statement',
                variables: di.vars ?? [],
                firstStatement: di.first_stmt,
            };
        }
        else if (di.branch_true_ctx_id !== undefined) {
            sm[i] = {
                ...common,
                type: 'branch',
                trueContextId: di.branch_true_ctx_id,
                falseContextId: di.branch_false_ctx_id,
            };
        }
        else {
            sm[i] = {
                ...common,
                type: 'context',
            };
        }
    }
    exports.defaultDebugInfoCache.set(code.hash().toString('base64'), {
        sourceMap: sm,
        globals,
        marks: parsedMarks,
    });
    return code;
}
exports.registerCompiledContract = registerCompiledContract;
